# Include the directory itself as a path to include directories
set(CMAKE_INCLUDE_CURRENT_DIR ON)
# macro returns list of subdirs names of directory ${curdir}
macro(SUBDIRLIST result curdir)
  file(GLOB children RELATIVE ${curdir} ${curdir}/*)
  set(dirlist "")
  foreach(child ${children})
    if(IS_DIRECTORY ${curdir}/${child})
        set(dirlist ${dirlist} ${child})
    endif()
  endforeach()
  set(${result} ${dirlist})
endmacro()
# use all subdirs in JADE++ "src" direcory
subdirlist(SUBDIRS ${JADE++_SOURCE_DIR}/src)
message("adding subdirs:")
foreach(subdir ${SUBDIRS})
    add_subdirectory(${subdir})
    message(${subdir})
endforeach()
# Create a variable called JADE++_SOURCES containing all .cc files:
#file(GLOB JADE++_SOURCES *.cc *.c) 
# Create an executable file called run-onzf-fdtd from sources:

add_executable(run-jade-test jade.cc  test-jade.cc)
add_executable(run-optimize-cloak jade.cc optimize-cloak.cc)
add_executable(run-quasi-pec-spectra quasi-pec-spectra.cc)
add_executable(scattnlay scattnlay.cc)
# subdirs names are synonyms for librarys names
message("Searching for MPI...")
find_package(MPI)

# message("Searching for blitz...")
# find_path(BLITZ_INCLUDE_DIR blitz/blitz.h)
# find_library(BLITZ_LIBRARIES blitz)
# set(BLITZ_FOUND 0)
# if(BLITZ_INCLUDE_DIR)
#   if(BLITZ_LIBRARIES)
#     set(BLITZ_FOUND 1)
#     message(STATUS "Found Blitz++")
#   endif(BLITZ_LIBRARIES)
# endif(BLITZ_INCLUDE_DIR)

# if (MPI_FOUND AND BLITZ_FOUND)
if (MPI_FOUND)
#  include_directories(${MPI_INCLUDE_DIRS} ${BLITZ_INCLUDE_DIR} ${SUBDIRS} ${JADE++_SOURCE_DIR}/src)
#  target_link_libraries(run-jade-test ${SUBDIRS} ${MPI_LIBRARIES} ${BLITZ_LIBRRIES} -lblitz)
  target_link_libraries(run-jade-test ${SUBDIRS})
  target_link_libraries(run-optimize-cloak ${SUBDIRS})
  target_link_libraries(run-quasi-pec-spectra ${SUBDIRS})
  target_link_libraries(scattnlay ${SUBDIRS})

#  target_link_libraries(run-jade-test ${SUBDIRS} ${MPI_LIBRARIES})
  install( TARGETS run-jade-test   DESTINATION ./    )
  install( TARGETS run-optimize-cloak   DESTINATION ./    )
  install( TARGETS run-quasi-pec-spectra   DESTINATION ./    )
  install( TARGETS scattnlay   DESTINATION ./    )
else()
  message( FATAL_ERROR "JADE++ needs MPI libs installed!" )
endif()
